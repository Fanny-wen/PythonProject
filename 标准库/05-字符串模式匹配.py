"""
re模块为高级字符串处理机提供正则表达式工具
. 在默认模式，匹配除了换行的任意字符
^ 匹配字符串的开头
$ 匹配字符串尾或者换行符的前一个字符
*  对它前面的正则式匹配0到任意次重复，尽量多的匹配字符串
+  对它前面的正则式匹配1到任意次重复
？ 对它前面的正则式匹配0到1此重复
*?，+?，?? 在修饰符后添加？ 将使样式以 非贪婪 方式或者 :dfn`最小方式进行匹配
{m} 对其之前的正则式指定匹配m个重复
{m,n} 对正则式进行m到n次匹配，在 m 和 n之间取尽量多
{m,n}? 前一个修饰符的非贪婪模式，之匹配尽量少的字符次数
\ 转义特殊字符
[] 用于表示一个字符集合：
    ·字符可以单独列出，比如[amk] 匹配 'a','m','k'
    ·可以表示字符范围，通过‘-’ 将两个字符连起来。比如[a-z]将匹配任何小写ASCll字符。如果-进行了转义，或者它的位置在首尾，它就只表示普通字符‘-’
| A|B，A和B可以是任意正则表达式，创建一个正则表达式，匹配A或者B人一个正则表达式可以用‘|’连接。

"""

import re

list1 = re.findall(r'\bf[a-z]*', 'which foot ro hand fell fastest')
print(list(list1))  # ['foot', 'fell', 'fastest']
